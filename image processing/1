import numpy as np
import cv2
#im = cv2.imread('test.jpg')

def binarize(im) :
    h,w=im.shape[:2]
    cv2.rectangle(im, tuple((0,0)),tuple((w,h)) , (255,255,255), thickness=10, lineType=8, shift=0)
    imgray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY)
    ret, thresh = cv2.threshold(imgray, 240, 255, 0)
    contours, hierarchy = cv2.findContours(thresh, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    
    #print w,h
    ar=w*h
    #print w*h
    #print contours[0]
    cnt=[]
    total_area=0
    for i in range(len(contours)):
            j=0
            if i>0 :
                cnt.append(contours[i])
                total_area+= cv2.contourArea(contours[i])
                j+=1
               # print total_area
        	#cnt=contours[i]
        	#max_area=0
        	#area = cv2.contourArea(cnt)
                #print area
        	#if(area>max_area):
        	#	max_area=area
                #ci=i
    cv2.drawContours(im,cnt,-1,(0,255,0),10)
    cv2.namedWindow('image', cv2.WINDOW_NORMAL)
    cv2.imshow('image',im)
    cv2.waitKey(500)
    cv2.destroyAllWindows() 

    #print total_area
    if len(contours)==0 :
        return 1,ar
    elif total_area > ar/2 :
        return 1,total_area
    else :
        return 0,total_area
def crop(img,x,y,w,h) :
    #img = cv2.imread('sachin.jpg')
    #gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    roi_gray = img[y:y+h, x:x+w]
    return roi_gray


im = cv2.imread('test5.png')
im1= cv2.imread('test2.png')
h,w= im.shape[:2]
N=5
y0= h/N
x0=w/N
array=[[]]
for j in range(N) :
    y = j*y0
    row = []
    for i in range(N) :
        x = i*x0
        xyz=crop(im,x,y,x0,y0)
        b,area=binarize(xyz)
        print b,area
        row.append(b)
        #cv2.namedWindow('image', cv2.WINDOW_NORMAL)
        #cv2.imshow('image',xyz)
        #cv2.waitKey(500)
        #cv2.destroyAllWindows()
    array.append(row)

print binarize(im)
print array





cv2.namedWindow('image', cv2.WINDOW_NORMAL)
cv2.imshow('image',im)
cv2.waitKey(0)
cv2.destroyAllWindows() 

